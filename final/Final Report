For our project we decided to build two mini games and have the user select between the two games to play. Our main/first game is a space game where we have a player and incoming enemies (other ships). The goal of the game is for the player to destroy the enemies before they fly off the screen, if the player fails to do so his health will decrease. The structure of the space game is mostly composition. We created several objects like our game, then inside our game we created our bullets, player, enemies, health and score. Each of these classes inherits from libraries or parents such as QGraphicsPixmapItem, QGraphicsView, and QGraphicsTextItem. These are several classes that became very helpful in the creation of our program. QGraphicsView provides a widget for displaying objects, QGraphicsPixmapItem allows us to add items to our scenes, QGraphicsTexItem allowed us to add text to out game such as the health and score for the player. Also, an essential library that was included in our program was the media library which enabled us to add sounds to our game.
	For our tower defense portion of the game we created a path that images/enemies (just game enemies, super awesome enemies) will follow. The user is able to pick from three types of towers that fire different types of projectiles. The game consist of placing these towers strategically so that the projectiles destroy the enemy before reaching the end of the path. The structure for this game is very similar to our space game. We used composition to place our towers on our game, our path is drawn which is allowed by the libraries QGraphicsLineItem and QLineF. Also, unlike our space game, we created a base tower class (abstract) which allowed us to create three more tower classes which inherited from the main tower class. This made it much easier to add towers.  
	Even though our second mini game is not fully complete (yet), using QT and watching tutorials has helped us learn how to use this amazing, yet sometimes confusing, software. Also, creating two games gave us the opportunity of implementing composition in our space game and inheritance in a separate tower defense game. This helped us analyze and understand each one more and learn more about OOP.
